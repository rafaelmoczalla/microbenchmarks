apply plugin: "java"

gradle.buildFinished { project.buildDir.deleteDir() }

task buildFiles(type: Copy) {
    from("Makefile.template") {
        rename { fileName -> "${fileName - '.template'}" }
        into ".."
    }
    from("submit/Dockerfile.template") {
        rename { fileName -> "${fileName - '.template'}" }
    }
    from("submit/submit.sh.template") {
        rename { fileName -> "${fileName - '.template'}" }
    }
    into "submit"
    expand([
        DOCKER_NETWORK: "$dockerNetwork",

        SCALA_VERSION: "$scalaVersion",
        SCALA_SUBVERSION: "$scalaSubversion",
        SPARK_VERSION: "$sparkVersion",
        SPARK_KAFKA_VERSION: "$sparkKafkaVersion",
        SPARK_BASE_URL: "$sparkBaseUrl",
        HADOOP_VERSION: "$hadoopVersion",
        KAFKA_VERSION: "$kafkaVersion",
        KAFKA_BASE_URL: "$kafkaBaseUrl",

        SPARK_HOME: "$sparkHome",
        SPARK_MASTER_NAME: "$sparkMasterName",
        SPARK_MASTER_PORT: "$sparkMasterPort",
        SPARK_MASTER_WEBUI_PORT: "$sparkMasterWebuiPort",
        SPARK_WORKER_WEBUI_PORT: "$sparkWorkerWebuiPort",
        SPARK_SUBMIT_ARGS: "$sparkSubmitArgs",
        SPARK_APP_FOLDER: "$sparkAppFolder",
        SPARK_APP_ARCHIVE_BASE_NAME: "$sparkAppArchiveBaseName",
        SPARK_APP_ARCHIVE_VERSION: "$sparkAppArchiveVersion",
        SPARK_APP_MAIN_CLASS: "$sparkAppMainClass",
        SPARK_APP_ARGS: "$sparkAppArgs",
        SPARK_APP_PYTHON_LOCATION: "\${SPARK_APP_PYTHON_LOCATION}",

        ZOOKEEPER_PEER_PORT:"$zookeeperPeerPort",
        ZOOKEEPER_LEADER_PORT: "$zookeeperLeaderPort",
        ZOOKEEPER_CLIENT_PORT: "$zookeeperClientPort",
        ZOOKEEPER_MAX_CLIENT_CNXNS: "$zookeeperMaxClientCnxns",
        ZOOKEEPER_SYNC_LIMIT: "$zookeeperSyncLimit",
        ZOOKEEPER_INIT_LIMIT: "$zookeeperInitLimit",
        ZOOKEEPER_TICK_TIME: "$zookeeperTickTime",

        KAFKA_HOME: "$kafkaHome",
        KAFKA_BOOTSTRAP_SERVERS_PORT: "$kafkaBootstrapServersPort",

        SOURCE_ARCHIVE_BASE_NAME: "$sourceArchiveBaseName",
        SOURCE_ARCHIVE_VERSION: "$sourceArchiveVersion",
        SOURCE_LIST: "$sourceList",

        STREAM_LIST: "$streamList"
    ])
}

build.dependsOn buildFiles

clean.doFirst {
    delete "Makefile"
    delete "submit/Dockerfile"
    delete "submit/submit.sh"
    delete "submit/$sparkAppArchiveBaseName-${sparkAppArchiveVersion}.jar"
}

